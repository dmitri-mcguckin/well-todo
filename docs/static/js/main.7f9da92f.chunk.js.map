{"version":3,"sources":["components/Item.js","components/List.js","components/layout/Header.js","components/pages/About.js","components/AddItem.js","App.js","serviceWorker.js","index.js"],"names":["Item","style","margin","border","background","padding","width","textDecoration","props","item","completed","this","id","title","type","onChange","toggle","bind","buttonStyle","onClick","delete","Component","float","color","backgroundColor","borderRadius","cursor","List","list","map","key","headerStyle","fontWeight","textAlign","linkStyle","Header","to","aboutStyle","About","fontSize","AddItem","state","e","setState","target","value","submit","preventDefault","add","onSubmit","display","name","placeholder","flex","className","App","todos","Axios","post","then","res","data","filter","get","exact","path","render","Fragment","component","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f9da92f.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Item extends Component {\n  style = () => {\n    return { margin: '0 auto', border: '1px solid #999', background: '#dcdcdc', padding: '0.6em', width: '75vw', textDecoration: this.props.item.completed ? 'line-through' : 'none' };\n  }\n\n  render(){\n    const { id, title } = this.props.item\n    var e = (\n        <p style={this.style()}>\n          <input type='checkbox' onChange={this.props.toggle.bind(this, id)} /> {' '}\n          {title}\n          <button style={buttonStyle} onClick={this.props.delete.bind(this, id)}>x</button>\n        </p>\n    );\n    return e;\n  }\n}\n\nItem.propTypes = {\n  item: PropTypes.object.isRequired\n}\n\nconst buttonStyle = {\n  float: 'right',\n  padding: '0.1em 0.4em',\n  color: '#dcdcdc',\n  backgroundColor: '#f00',\n  border: 'none',\n  borderRadius: '50%',\n  cursor: 'pointer'\n}\n\nexport default Item;\n","import React, {Component} from 'react';\nimport Item from './Item'\nimport PropTypes from 'prop-types';\n\nclass List extends Component {\n  render(){\n    return this.props.list.map((list) => (\n      <Item key={list.id} item={list} toggle={this.props.toggle} delete={this.props.delete} />\n    ));\n  }\n}\n\nList.propTypes = {\n  list: PropTypes.array.isRequired,\n  toggle: PropTypes.func.isRequired,\n  delete: PropTypes.func.isRequired\n}\n\nexport default List;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction Header(){\n  return (\n    <header style={headerStyle}>\n      <h1>Well-To-Do</h1>\n      <Link style={linkStyle} to='/'>Home</Link>\n      &nbsp;|&nbsp;\n      <Link style={linkStyle} to='/about'>About</Link>\n    </header>\n  );\n}\n\nconst headerStyle = {\n  color: '#dcdcdc',\n  fontWeight: 'bold',\n  padding: '0.4em 0',\n  backgroundColor: '#333',\n  textAlign: 'center'\n}\n\nconst linkStyle = {\n  color: '#dcdcdc',\n  backgroundColor: '#333',\n  textAlign: 'center'\n}\n\nexport default Header;\n","import React from 'react';\n\nfunction About(){\n  return (\n    <div style={aboutStyle}>\n      <h3>About</h3>\n      <p style={{fontSize: '0.9em'}}>This is a simple todo list app made in ReactJS</p>\n      <p style={{fontSize: '0.7em'}}>v1.0.0</p>\n    </div>\n  );\n}\n\nconst aboutStyle = {\n  margin: '1em auto',\n  padding: '1em',\n  color: '#dcdcdc',\n  fontWeight: 'lighter',\n  backgroundColor: '#555',\n  textAlign: 'center',\n  width: '40vw'\n}\n\nexport default About;\n","import React, {Component} from 'react';\n// import PropTypes from 'prop-types';\n\nclass AddItem extends Component {\n  state = {\n    title: ''\n  }\n\n  onChange = (e) => this.setState({ title: e.target.value });\n\n  submit = (e) => {\n    e.preventDefault();\n    this.props.add(this.state.title);\n    this.setState({title: ''});\n  }\n\n  render(){\n    return (\n      <form onSubmit={this.submit} style={{ display: 'flex'}}>\n        <input\n          type='text'\n          name='title'\n          placeholder='Add a new todo item.'\n          value={this.state.title}\n          style={{flex: 10, padding: '0 1em' }}\n          onChange={this.onChange}\n        />\n        <input\n          type='submit'\n          value='Add'\n          className='add-btn'\n          style={{flex: '1', padding: '0 1em' }}\n        />\n      </form>\n    );\n  }\n}\n\nexport default AddItem;\n","import React, {Component} from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport List from './components/List';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport AddItem from './components/AddItem';\n// import uuid from 'uuid';\nimport Axios from 'axios';\n\nclass App extends Component {\n  state = {todos: []}\n\n  componentDidMount() {\n    Axios.get('https://jsonplaceholder.typicode.com/todos')\n      .then(res => this.setState({todos: res.data}));\n  }\n\n  add = (title) => {\n    if(title === '') return false;\n\n    Axios.post('https://jsonplaceholder.typicode.com/todos', {title: title, completed: false})\n      .then(res => this.setState({todos: [...this.state.todos, res.data]}));\n    return true;\n  }\n\n  delete = (id) => {\n    Axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res => this.setState({ todos: [...this.state.todos.filter(item => item.id !== id)]}));\n  }\n\n  toggle = (id) => {\n    this.setState({todos: this.state.todos.map(item => {\n      if(item.id === id){\n        item.completed = !item.completed;\n      }\n      return item;\n    })});\n  }\n\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header/>\n          <Route exact path=\"/\" render={props => (\n            <React.Fragment>\n              <AddItem add={this.add}/>\n              <List list={this.state.todos} toggle={this.toggle} delete={this.delete}/>\n            </React.Fragment>\n          )}/>\n          <Route exact path=\"/about\" component={About} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}